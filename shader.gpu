

// Vertex shader
const vertexShaderSource = `
attribute vec3 vertex;
attribute vec2 textureCoord;
uniform mat4 ModelViewProjectionMatrix;

varying vec2 vTC;
uniform bool textured;

void main() {
    if(textured){
        vTC=textureCoord;
    }
    gl_Position = ModelViewProjectionMatrix * vec4(vertex,1.0);
}`;


// Fragment shader
const fragmentShaderSource = `
#ifdef GL_FRAGMENT_PRECISION_HIGH
   precision highp float;
#else
   precision mediump float;
#endif

uniform vec4 color;
uniform sampler2D TMU;
varying vec2 vTC;
uniform bool textured;
void main() {
    vec4 tColor = texture2D(TMU, vTC);
    gl_FragColor = color;
    if(textured){
        gl_FragColor = tColor;
    }
}`;